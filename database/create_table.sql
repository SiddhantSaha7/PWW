CREATE DATABASE PWW_DATABASE;
USE PWW_DATABASE;

CREATE TABLE PWW_ENTRY(
    PWWEntryId BIGINT NOT NULL AUTO_INCREMENT,
    PWWTitle MEDIUMTEXT NOT NULL Default('Proof Without Words'),
    PWWShortDescription MEDIUMTEXT NULL,
    PWWAdditionalNotes LONGTEXT NULL,
    PublishStatus TINYTEXT NOT NULL Default('NeedsReview'),
    CitationPageStart SMALLINT  NULL,
    CitationPageEnd SMALLINT NULL,
    CitationMediaType TINYTEXT NULL,
    CitationDOI MEDIUMTEXT NULL,
    CitationYear SMALLINT NULL,
    PWWSourceUrl MEDIUMTEXT NULL,
    PWWGraphicRightsHolder MEDIUMTEXT NULL,
    ProofPdf MEDIUMTEXT NULL,
    Constraint PWW_Entry_PK PRIMARY KEY(PWWEntryId),
    Constraint PWW_Entry_AK1_1 UNIQUE(CitationDOI),
    Constraint PWW_Entry_AK2_1 UNIQUE(PWWSourceUrl),
    Constraint PWW_Entry_AK3_1 UNIQUE(ProofPdf),
    Constraint CitationPageEndCheck CHECK (CitationPageEnd>CitationPageStart),
    Constraint CitationMediaType CHECK (CitationMediaType in ('Book', 'Journal')),
    Constraint PublishStatusTypeCheck CHECK(PublishStatus in ('PublicAccessPublished', 'PrivateAccessPublished', 'NeedsReview'))
);

ALTER TABLE PWW_ENTRY AUTO_INCREMENT = 10000;

CREATE TABLE PUBLIC_ACCESS_DATES_PWW(
    PWWEntryId BIGINT NOT NULL,
    PublicAccessStartDate DATE NOT NULL,
    PublicAccessEndDate DATE NOT NULL DEFAULT('9999-12-31'),
    Constraint PUBLIC_ACCESS_DATES_PWW_PK PRIMARY KEY(PWWEntryId),
    Constraint PUBLIC_ACCESS_DATES_PWW_FK FOREIGN KEY(PWWEntryId) REFERENCES PWW_ENTRY(PWWEntryId) ON UPDATE NO ACTION ON DELETE CASCADE
);

CREATE TABLE BOOK_CITATION(
    PWWEntryId BIGINT NOT NULL,
    BookAuthor VARCHAR(50) NOT NULL,
    BookTitle VARCHAR(100) NOT NULL,
    BookSeries VARCHAR(100) NULL,
    ISBN CHAR(17) NOT NULL,
    Constraint BOOK_CITATION_PK PRIMARY KEY(PWWEntryId),
    Constraint BOOK_CITATION_FK FOREIGN KEY(PWWEntryId) REFERENCES PWW_ENTRY(PWWEntryId) ON UPDATE NO ACTION ON DELETE CASCADE
);

CREATE TABLE JOURNAL_CITATION(
    PWWEntryId BIGINT NOT NULL,
    JournalTitle VARCHAR(50) NOT NULL,
    JournalVolume INT NOT NULL,
    JournalNumber INT NOT NULL,
    JournalMonth VARCHAR(15) NULL,
    Constraint JOURNAL_CITATION_PK PRIMARY KEY(PWWEntryId),
    Constraint JOURNAL_CITATION_FK FOREIGN KEY(PWWEntryId) REFERENCES PWW_ENTRY(PWWEntryId) ON UPDATE NO ACTION ON DELETE CASCADE
);

CREATE TABLE PWW_AUTHOR(
    PWWAuthorId BIGINT NOT NULL AUTO_INCREMENT,
    AuthorFirstName VARCHAR(30) NOT NULL DEFAULT('unknown'),
    AuthorLastName VARCHAR(30) NOT NULL DEFAULT('unknown'),
    Constraint PWW_AUTHOR_PK PRIMARY KEY(PWWAuthorId)
);

ALTER TABLE PWW_AUTHOR AUTO_INCREMENT=25000;

CREATE TABLE PWW_ENTRY_AUTHOR_INTERSECTION(
    PWWAuthorId BIGINT NOT NULL,
    PWWEntryId BIGINT NOT NULL,
    CONSTRAINT PWW_ENTRY_AUTHOR_INTERSECTION_PK PRIMARY KEY(PWWEntryId, PWWAuthorId),
    CONSTRAINT PWW_ENTRY_AUTHOR_INTERSECTION_FK1_1 FOREIGN KEY(PWWEntryId) REFERENCES PWW_ENTRY(PWWEntryId) ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT PWW_ENTRY_AUTHOR_INTERSECTION_FK2_1 FOREIGN KEY(PWWAuthorId) REFERENCES PWW_AUTHOR(PWWAuthorId) ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE MSC_2020_TAGS(
    MSC2020CodeId BIGINT NOT NULL AUTO_INCREMENT,
    MSC2020Codes TINYTEXT NOT NULL,
    MathematicalField MEDIUMTEXT NOT NULL,
    CONSTRAINT MSC_2020_TAGS_PK PRIMARY KEY(MSC2020CodeId),
    CONSTRAINT MSC_2020_TAGS_AK_1_1 UNIQUE(MSC2020Codes),
    CONSTRAINT MSC_2020_TAGS_AK_2_1 UNIQUE(MathematicalField) 
);

ALTER TABLE MSC_2020_TAGS AUTO_INCREMENT=1000;

CREATE TABLE PWW_TAGGED_MSC(
    PWWEntryId BIGINT NOT NULL,
    MSC2020CodeId BIGINT NOT NULL,
    IsPrimaryCode Boolean NOT NULL, 
    CONSTRAINT PWW_TAGGED_MSC_PK PRIMARY KEY(PWWEntryId, MSC2020CodeId),
    CONSTRAINT PWW_TAGGED_MSC_FK_1_1 FOREIGN KEY(PWWEntryId) REFERENCES PWW_ENTRY(PWWEntryId) ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT PWW_TAGGED_MSC_FK_2_1 FOREIGN KEY(MSC2020CodeId) REFERENCES MSC_2020_TAGS(MSC2020CodeId) ON UPDATE NO ACTION ON DELETE CASCADE
    /* will have to write a trigger to enforce the 'no more than 2 primary code' rule :( */
);

CREATE TABLE THEOREM_TAGS(
    TheoremId BIGINT NOT NULL AUTO_INCREMENT,
    Theorem MEDIUMTEXT NOT NULL,
    CONSTRAINT THEOREM_TAGS_PK PRIMARY KEY(TheoremId),
    CONSTRAINT THEOREM_TAGS_AK_1_1 UNIQUE(Theorem) 
);

ALTER TABLE THEOREM_TAGS AUTO_INCREMENT=2000;

CREATE TABLE PWW_TAGGED_THEOREMS(
    PWWEntryId BIGINT NOT NULL,
    TheoremId BIGINT NOT NULL,
    CONSTRAINT PWW_TAGGED_THEOREM_PK PRIMARY KEY(PWWEntryId, TheoremId),
    CONSTRAINT PWW_TAGGED_THEOREM_FK_1_1 FOREIGN KEY(PWWEntryId) REFERENCES PWW_ENTRY(PWWEntryId) ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT PWW_TAGGED_THEOREM_FK_2_1 FOREIGN KEY(TheoremId) REFERENCES THEOREM_TAGS(TheoremId) ON UPDATE NO ACTION ON DELETE CASCADE
);

CREATE TABLE KEYWORD_TAGS(
    KeywordId BIGINT NOT NULL AUTO_INCREMENT,
    Keyword MEDIUMTEXT NOT NULL,
    CONSTRAINT KEYWORD_TAGS_PK PRIMARY KEY(KeywordId),
    CONSTRAINT KEYWORD_TAGS_AK_1_1 UNIQUE(Keyword)
);

ALTER TABLE KEYWORD_TAGS AUTO_INCREMENT=3000;

CREATE TABLE PWW_TAGGED_KEYWORDS(
    PWWEntryId BIGINT NOT NULL,
    KeywordId BIGINT NOT NULL,
    CONSTRAINT PWW_TAGGED_KEYWORDS_PK PRIMARY KEY(PWWEntryId, KeywordId),
    CONSTRAINT PWW_TAGGED_KEYWORDS_FK_1_1 FOREIGN KEY(PWWEntryId) REFERENCES PWW_ENTRY(PWWEntryId) ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT PWW_TAGGED_KEYWORDS_FK_2_1 FOREIGN KEY(KeywordId) REFERENCES KEYWORD_TAGS(KeywordId) ON UPDATE NO ACTION ON DELETE CASCADE
);

CREATE TABLE TOPIC_TAGS(
    TopicId BIGINT NOT NULL AUTO_INCREMENT,
    TopicName MEDIUMTEXT NOT NULL,
    CONSTRAINT TOPIC_TAGS_PK PRIMARY KEY(TopicId),
    CONSTRAINT TOPIC_TAGS_AK_1_1 UNIQUE(TopicName)
);

ALTER TABLE TOPIC_TAGS AUTO_INCREMENT=4000;

CREATE TABLE PWW_TAGGED_TOPICS(
    PWWEntryId BIGINT NOT NULL,
    TopicId BIGINT NOT NULL,
    CONSTRAINT PWW_TAGGED_TOPICS_PK PRIMARY KEY(PWWEntryId, TopicId),
    CONSTRAINT PWW_TAGGED_TOPICS_FK_1_1 FOREIGN KEY(PWWEntryId) REFERENCES PWW_ENTRY(PWWEntryId) ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT PWW_TAGGED_TOPICS_FK_2_1 FOREIGN KEY(TopicId) REFERENCES TOPIC_TAGS(TopicId) ON UPDATE NO ACTION ON DELETE CASCADE
);

CREATE TABLE PWW_CITED_WORKS(
    PWWCitedWorkCitationID BIGINT NOT NULL AUTO_INCREMENT,
    GivenCitation MEDIUMTEXT NOT NULL,
    DOI MEDIUMTEXT NULL,
    CONSTRAINT PWW_CITED_WORKS_PK PRIMARY KEY(PWWCitedWorkCitationId),
    CONSTRAINT PWW_CITED_WORKS_AK_1_1 UNIQUE(GivenCitation)
);

ALTER TABLE PWW_CITED_WORKS AUTO_INCREMENT=5000;

CREATE TABLE PWW_TAGGED_CITED_WORKS(
    PWWEntryId BIGINT NOT NULL,
    PWWCitedWorkCitationID BIGINT NOT NULL,
    CONSTRAINT PWW_TAGGED_CITED_WORKS_PK PRIMARY KEY(PWWEntryId, PWWCitedWorkCitationID),
    CONSTRAINT PWW_TAGGED_CITED_WORKS_FK_1_1 FOREIGN KEY(PWWEntryId) REFERENCES PWW_ENTRY(PWWEntryId) ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT PWW_TAGGED_CITED_WORKS_FK_2_1 FOREIGN KEY(PWWCitedWorkCitationID) REFERENCES PWW_CITED_WORKS(PWWCitedWorkCitationID) ON UPDATE NO ACTION ON DELETE CASCADE    
);

CREATE TABLE USER_ROLES(
    RoleId BIGINT NOT NULL AUTO_INCREMENT,
    RoleName VARCHAR(20) NOT NULL,
    ShortRoleDescription MEDIUMTEXT NOT NULL,
    CONSTRAINT USER_ROLES_PK PRIMARY KEY(RoleId),
    CONSTRAINT USER_ROLES_AK_1_1 UNIQUE(RoleName)
);

CREATE TABLE USER_INFORMATION(
    UserId BIGINT NOT NULL AUTO_INCREMENT,
    RoleId BIGINT NOT NULL,
    UserFirstName TINYTEXT NOT NULL,
    UserLastName TINYTEXT NOT NULL,
    UserEmailAddress TINYTEXT NOT NULL,
    UserPassword VARCHAR(30) NOT NULL,
    UserAccessStartDate DATE NOT NULL,
    UserAccessEndDate DATE NOT NULL DEFAULT('9999-12-31'),
    CONSTRAINT USER_INFORMATION_PK PRIMARY KEY(UserId),
    CONSTRAINT USER_INFORMATION_AK_1_1 UNIQUE(UserEmailAddress),
    CONSTRAINT USER_INFORMATION_FK_1_1 FOREIGN KEY (RoleId) REFERENCES USER_ROLES(RoleId) ON UPDATE NO ACTION ON DELETE CASCADE
);

CREATE TABLE PWW_ENTRY_CREATORS(
    PWWEntryId BIGINT NOT NULL,
    UserId BIGINT NOT NULL,
    DateEdited DATE NOT NULL,
    ShortDescriptionOfChange MEDIUMTEXT NULL,
    CONSTRAINT PWW_ENTRY_CREATORS_PK PRIMARY KEY(PWWEntryId, UserId),
    CONSTRAINT PWW_ENTRY_CREATORS_FK_1_1 FOREIGN KEY(PWWEntryId) REFERENCES PWW_ENTRY(PWWEntryId) ON UPDATE NO ACTION ON DELETE CASCADE,
    CONSTRAINT PWW_ENTRY_CREATORS_FK_2_1 FOREIGN KEY(UserId) REFERENCES USER_INFORMATION(UserId) ON UPDATE NO ACTION ON DELETE CASCADE
);
